Given an array of distinct integers arr, find all pairs of elements with the minimum absolute difference of any two elements. 
Return a list of pairs in ascending order(with respect to pairs), each pair [a, b] follows
a, b are from arr
a < b
b - a equals to the minimum absolute difference of any two elements in arr
 
Example 1:

Input: arr = [4,2,1,3]
Output: [[1,2],[2,3],[3,4]]
Explanation: The minimum absolute difference is 1. List all pairs with difference equal to 1 in ascending order.
Example 2:

Input: arr = [1,3,6,10,15]
Output: [[1,3]]

class Solution {
    
    public int getMinimumAbsoluteDiff(int[] arr){
        int min = Integer.MAX_VALUE;
        for(int i = 0; i < arr.length-1; i++){
            min = Math.min(min, arr[i+1] - arr[i]);
        }
        return min;
    }
    public List<List<Integer>> getPairs(int[] arr, int diff){
        List<List<Integer>> op = new ArrayList();
        
        for(int i = 0; i < arr.length-1; i++){
            if((arr[i+1] - arr[i]) == diff){
                List<Integer> ls = new ArrayList();
                ls.add(arr[i]);
                ls.add(arr[i+1]);
                op.add(ls);
            }  
        }
        return op;
    }
    
    public List<List<Integer>> minimumAbsDifference(int[] arr) {
        
        Arrays.sort(arr);
        int abs_diff = getMinimumAbsoluteDiff(arr);
        return(getPairs(arr, abs_diff));
    }
}
