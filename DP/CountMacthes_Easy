You are given an integer n, the number of teams in a tournament that has strange rules:

If the current number of teams is even, each team gets paired with another team. A total of n / 2 matches are played, and n / 2 teams advance to the next round.
If the current number of teams is odd, one team randomly advances in the tournament, and the rest gets paired. A total of (n - 1) / 2 matches are played, and (n - 1) / 2 + 1 teams advance to the next round.
Return the number of matches played in the tournament until a winner is decided.

class Solution {
    public int numberOfMatches(int n) {
        
        int advances = n;
        int matches = 0;
        int games_played = 0;
        while(advances > 1){
            System.out.println(advances);
            if(advances % 2 == 0){
                matches = advances / 2;
                advances  = matches;
            }
            else{
                matches = (advances - 1) / 2;
                advances = matches + 1;
            }
            games_played += matches;
        }
        return games_played;
    }
}
